package EMR.Unit_Clerk;

import java.io.File;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;

import java.io.IOException;
import java.time.Duration;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class A_Registration_Then_Book_Appt {

	public static void main(String[] args) throws InterruptedException, IOException {
		// TODO Auto-generated method stub

		// ***********************Launch Browser*********************

		// Launch Chrome WebDriver
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\AKDNdHRC\\Selenium\\Training Sessions\\Session 01\\MavenLoginTest\\Login\\chromedriver\\chromedriver.exe");
		
		// Instantiate the Chrome WebDriver
		WebDriver driver = new ChromeDriver();

//		// Launch Microsoft Edge WebDriver
//		System.setProperty("webdriver.edge.driver",
//				"C:\\Users\\AKDNdHRC\\Selenium\\Training Sessions\\Session 01\\MavenLoginTest\\Login\\msedgedriver\\msedgedriver.exe");
//		
//		// Instantiate the Microsoft Edge WebDriver
//		WebDriver driver = new EdgeDriver();

//		// Launch Mozilla Firefox WebDriver
//		System.setProperty("webdriver.gecko.driver",
//				"C:\\Users\\AKDNdHRC\\Selenium\\Training Sessions\\Session 01\\MavenLoginTest\\Login\\MozillaFirFoxDriver\\geckodriver.exe");
//		
//		// Instantiate the Mozilla Firefox WebDriver
//		WebDriver driver = new FirefoxDriver();

		// Explicit Wait for 60 Seconds [Specific WebElement]
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(60));

		// Implicit Wait for 60 Seconds [Global use for All WebElement]
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(60));
		driver.manage().timeouts().scriptTimeout(Duration.ofSeconds(60));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(60));

		// ************************Open Browser***********************

		// Browser Open in Maximise Window
		driver.manage().window().maximize();

		// Open URL EMR Staging Site (Login Page)
		driver.get("https://emrunitclerk.virtualdoc.akdndhrc.org/#/emrfrontend/");

		// *********************Login Page******************************

		// Open URL EMR Staging Site (Login Page)
		driver.get("https://emrunitclerk.virtualdoc.akdndhrc.org/#/emrfrontend/");

		// Locate User name By CSS Locator -- [tag#id] -- CSS Locator # 01
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input#mat-input-0")))
				.sendKeys("asher.hussnain@aku.edu");

		// Locate Password by By CSS Locator -- (tag[attribute=value]) -- CSS Locator #
		// 03
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[type=password]")))
				.sendKeys("asher12");

		// Locate Login Button by CSS Locator using [tag.value of class name] -- CSS
		// Locator # 02
		wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button.btn-Signin"))).click();

		// Flow
		System.out.println("Step# 01: Successfully Login the EMR Unit Clerk App.");

		// **********************Dashboard********************************

		// In Dashboard Click on "Register New Patient" Button

		// Switch to Product Page
		String currWindoeHanle = driver.getWindowHandle();
		driver.switchTo().window(currWindoeHanle);

		// Locate Registration Button by Xpath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@Class='btn-RegNewPatient']"))).click();

		// Flow
		System.out.println("Step# 02: In Dashboard Click on 'REGISTER NEW PATIENT' Button ");

		// ***********************Registration Form************************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Field #01 MR No [Auto-Generated by App]*
		String Patient_MR_No = "";

		// Field #02 AKU MR No [User Input]*
		String Patient_AKU_MR_No = "338-04-05";

		// Field #03 Sehat Safar No [User Input]
		String Patient_Sehat_Safar_No = "S55734391";

		// Field #04 CNIC No [User Input]
		String Patient_CNIC_No = "02498999054121";

		// Field #05 First Name [User Input]*
		String Patient_First_Name = "Test";

		// Field #06 Middle Name [User Input]
		String Patient_Middle_Name = "";

		// Field #07 Last Name [User Input]*
		String Patient_Last_Name = "Demo";

		// Field #08 Gender [Drop-Down Options]*
		// 1. Male , 2. Female , 3. Other
		String Patient_Gender = "Male";

		// Field #09 Email [User Input]
		String Patient_Email = "Akbar100@gmail.com";

		// Field #10 Phone No [User Input]*
		String Patient_Phone_No = "03110966445";

		// Field #11 Alternate Phone No [User Input]
		String Patient_Alternate_Phone_No = "02401150345";

		// Field #12 City Town [User Input]*
		String Patient_City_Town = "Multan";

		// ________________________________________________________________
		// Field #13 DOB [User Input]* [Method One]
//				String Patient_DOB = "01/04/1888";

//				// Field #13 DOB [User Input]* [Method Two]
//				String M2_Year = "1994";
//				String M2_Month = "AUG";
//				String M2_Date = "14";

		// Field #13 DOB [User Input]* [Method Three]
		String M3_Year = "1956";
		String M3_Month = "MAY";
		String M3_Date = "14";
		// ________________________________________________________________

		// Field #14 Age(Years) [User Input]
//				String Patient_Age = "53";

		// Field #15 Province [Drop-Down Options]*
		// 1. Sindh , 2. Punjab , 3. Balochistan , 4. KPK
		String Patient_Province = "Punjab";

		// Field #16 Home Address [User Input]
		String Patient_Home_Address = "Block# 15, House# 765. Gulshan Ghazi";

		// Field #17 Marital Status [Drop-Down Options]*
		// 1. Married , 2. Unmarried , 3. Divorce , 4. Widow , 5. Others
		String Patient_Marital_Status = "Others";

		// Field #18 Type of Visit [Drop-Down Options]*
		// 1. Clinical , 2. Educational , 3. Immunization Visit , 4. Others
		String Patient_Type_Of_Visit = "Educational";

		// ________________________________________________________________
		// Select Payment Options
		// 1. Default = (PKR. 750)
		// 2. Adults = (PKR. 650)
		// 3. Zero = (PKR. 0)
		// 4. YPH = (PKR. 300)
		// 5. Peads = (PKR. 500)
		// 6. Service Charges = (PKR. 150)
		// 7. Discounted Fees = (PKR. 650)
		String Patient_Discount = "Adults";
		// ________________________________________________________________

		// Patient Registration Form Fill

		// ******************Field #01 MR No*******************************

		// Pauses for 2 second
		Thread.sleep(2000);

		// 1. MR No is Mandatory Field but auto generated by App
		// Wait until the input field is visible and has a value
		WebElement CopyMrNo = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[1]/mat-form-field/div/div[1]/div[3]/input")));

		// Get the auto-generated value
		Patient_MR_No = CopyMrNo.getDomProperty("value"); // Use getDomProperty("value") if you specifically need
															// the current runtime value modified by JavaScript.

//				// Optional: Verify the value
//				if (Patient_MR_No == null || Patient_MR_No.isEmpty()) {
//				    System.out.println("Warning: MR No was not generated or is empty");
//				} else {
//				    System.out.println("Generated MR No: " + Patient_MR_No);
//				}

		// ******************Field #02 AKU MR No***************************

		// 2. AKU MR No is Mandatory Field Locate By XPath
		WebElement AkuMrNo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[2]/mat-form-field/div/div[1]/div[3]/input")));
		AkuMrNo.sendKeys(Patient_AKU_MR_No);

		// *****************Field #03 Sehat Safar No***********************

		// 3. Sehat Safar No is Optional Field Locate By XPath
		WebElement SehatSafarNo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[3]/mat-form-field/div/div[1]/div[3]/input")));
		SehatSafarNo.sendKeys(Patient_Sehat_Safar_No);

		// ******************Field #04 CNIC No******************************

		// 4. CNIC No is Optional Field Locate By XPath
		WebElement CNICNo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[4]/mat-form-field/div/div[1]/div[3]/input")));
		CNICNo.sendKeys(Patient_CNIC_No);

		// *****************Field #05 First Name******************************

		// 5. First Name is Mandatory Field Locate By XPath
		WebElement FirstName = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[5]/mat-form-field/div/div[1]/div[3]/input")));
		FirstName.sendKeys(Patient_First_Name);

		// ******************Field #06 Middle Name****************************

		// 6. Middle Name is Optional Field Locate By XPath
		WebElement MiddleName = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[6]/mat-form-field/div/div[1]/div[3]/input")));
		MiddleName.sendKeys(Patient_Middle_Name);

		// ******************Field #07 Last Name*******************************

		// 7. Last Name is Mandatory Field Locate By XPath
		WebElement LastName = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[7]/mat-form-field/div/div[1]/div[3]/input")));
		LastName.sendKeys(Patient_Last_Name);

		// ******************Field #08 Gender***********************************

		// 8. Gender dropdown trigger is Mandatory Field Locate By XPath
		WebElement GenderdropdownTrigger = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"mat-select-0\"]")));
		GenderdropdownTrigger.click();

		// Gender selection based on Patient_Gender value
		switch (Patient_Gender.toLowerCase()) {
		case "male":
			WebElement male = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//mat-option[@id='mat-option-0']//span")));
			male.click();
			break;

		case "female":
			WebElement female = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//mat-option[@id='mat-option-1']//span")));
			female.click();
			break;

		case "other":
			WebElement other = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//mat-option[@id='mat-option-2']//span")));
			other.click();
			break;

		default:
			System.out.println("Invalid gender specified: " + Patient_Gender);
			break;
		}

		// *****************Field #09 Email***************************************

		// 9. Email is Optional Field Locate By XPath
		WebElement Email = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[9]/mat-form-field/div/div[1]/div[3]/input")));
		Email.sendKeys(Patient_Email);

		// ******************Field #10 Phone No***********************************

		// 10. Phone No is Mandatory Field Locate By XPath
		WebElement PhoneNo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[10]/mat-form-field/div/div[1]/div[3]/input")));
		PhoneNo.sendKeys(Patient_Phone_No);

		// ****************Field #11 Alternate Phone No***************************

		// 11. Alternate Phone No is Optional Field Locate By XPath
		WebElement AlternatePhoneNo = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[11]/mat-form-field/div/div[1]/div[3]/input")));
		AlternatePhoneNo.sendKeys(Patient_Alternate_Phone_No);

		// *****************Field #12 City Town***********************************

		// 12. City Town is Mandatory Field but App set Value 'Karachi' By Default
		WebElement CityTown = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[12]/mat-form-field/div/div[1]/div[3]/input")));
		CityTown.clear(); // Clear text from field
		CityTown.sendKeys(Patient_City_Town);

		// *************************Field #13 DOB**********************************
		// =========================== Method # 01 ================================
		// >>>>>>>>>>>>>>>Directly Enter Date Dont Use Date Picker<<<<<<<<<<<<<<<<<

//				// 13. DOB is Mandatory Field Locate By XPath
//				WebElement DoB = driver.findElement(By.xpath(
//						"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[13]/mat-form-field/div/div[1]/div[3]/input"));
//				DoB.sendKeys(Patient_DOB);

		// ========================= Method # 02 ==================================
		// >>>>>>>>>>>>>First Check Matching Month, Year Then Break<<<<<<<<<<<<<<<<

//				// 13. DOB is Mandatory Field Locate By XPath
//				driver.findElement(By.xpath(
//						"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[13]/mat-form-field/div/div[1]/div[4]/mat-datepicker-toggle/button"))
//						.click();
		//
//				// Year and Month Selection
//				while (true) {
//					String MonthYear = driver.findElement(By.xpath(" //button[@aria-label='Choose month and year']")).getText();
//					System.out.println(MonthYear);
		//
//					String arr[] = MonthYear.split(" ");
//					String mon = arr[0];
//					String yr = arr[1];
		//
//					if (mon.equalsIgnoreCase(M2_Month) && yr.equals(M2_Year))
//						break;
//					else
//						driver.findElement(By.xpath("//button[@aria-label='Previous month']")).click();
		//
//				}
		//
//				// Date Selection
//				List<WebElement> allDates = driver
//						.findElements(By.xpath("//*[@id=\"mat-datepicker-0\"]/div/mat-month-view/table/tbody//td"));
		//
//				for (WebElement ele : allDates) {
//					String dt = ele.getText();
		//
//					if (dt.equals(M2_Date)) {
//						ele.click();
//						break;
//					}
//				}

		// ====================== Method # 03 ====================================
		// >>>>>>>>>>>>>>>>>First Check Matching Year Then Month<<<<<<<<<<<<<<<<<<<

		// Open Calendar
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[13]/mat-form-field/div/div[1]/div[4]/mat-datepicker-toggle/button")))
				.click();

		// Click Month and Year Button
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@aria-label='Choose month and year']")))
				.click();

		// **Year Selection (Dynamic Loop)**
		while (true) {
			List<WebElement> allYears = driver
					.findElements(By.xpath("//*[@id=\"mat-datepicker-0\"]/div/mat-multi-year-view/table/tbody//td"));

			boolean yearFound = false;

			for (WebElement element : allYears) {
				if (element.getText().equals(M3_Year)) {
					element.click();
					yearFound = true;
					break;
				}
			}

			if (yearFound)
				break; // Exit loop once the year is found and clicked

			// Click Previous Year Button if the desired year is not in the current range
			driver.findElement(By.xpath("//button[@aria-label='Previous 24 years']")).click();
		}

		// **Month Selection**
		List<WebElement> allMonths = driver
				.findElements(By.xpath("//*[@id=\"mat-datepicker-0\"]/div/mat-year-view/table/tbody//td"));

		for (WebElement element : allMonths) {
			if (element.getText().equals(M3_Month)) {
				element.click();
				break;
			}
		}

		// **Date Selection**
		List<WebElement> allDates = driver
				.findElements(By.xpath("//*[@id=\"mat-datepicker-0\"]/div/mat-month-view/table/tbody//td"));

		for (WebElement element : allDates) {
			if (element.getText().equals(M3_Date)) {
				element.click();
				break;
			}
		}

		// *********************Field #14 Age(Years)***************************

		// 14. Age(Years) is Mandatory Field generate value on Click when DOB is filled
		// Locate By XPath
		WebElement AgeClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[14]/mat-form-field/div/div[1]/div[3]")));
		AgeClick.click();

//				// 14. Age(Years) is Mandatory Field generate value on Click Locate By XPath
//				driver.findElement(By.xpath(
//						"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[14]/mat-form-field/div/div[1]/div[3]/input"))
//						.sendKeys(Patient_Age);

		// ******************Field #15 Province**********************************

		// 15. Province dropdown trigger is Mandatory Field Locate By XPath
		WebElement ProvinceropdownTrigger = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[15]/mat-form-field/div/div[1]/div[3]/mat-select")));
		ProvinceropdownTrigger.click();

		// Province selection based on Patient_Province value
		switch (Patient_Province.toLowerCase()) {
		case "sindh":
			WebElement sindh = wait.until(ExpectedConditions
					.elementToBeClickable(By.xpath("//span[@class='mat-option-text'][normalize-space()='Sindh']")));
			sindh.click();
			break;

		case "punjab":
			WebElement punjab = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Punjab']")));
			punjab.click();
			break;

		case "balochistan":
			WebElement balochistan = wait.until(
					ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Balochistan']")));
			balochistan.click();
			break;

		case "kpk":
			WebElement kpk = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='KPK']")));
			kpk.click();
			break;

		default:
			System.out.println("Invalid province specified: " + Patient_Province);
			break;
		}

		// *****************Field #16 Home Address******************************

		// 16. Home Address is Optional Field Locate By XPath
		WebElement HomeAddress = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[16]/mat-form-field/div/div[1]/div[3]/input")));
		HomeAddress.sendKeys(Patient_Home_Address);

		// ******************Field #17 Marital Status**************************

		// 17. Marital Status dropdown trigger is Mandatory Field Locate By XPath
		WebElement MaritalStatusDropdownTrigger = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[17]/mat-form-field/div/div[1]/div[3]/mat-select/div/div[1]/span")));
		MaritalStatusDropdownTrigger.click();

		// Marital Status selection based on Patient_Marital_Status value
		switch (Patient_Marital_Status.toLowerCase()) {
		case "married":
			WebElement married = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Married']")));
			married.click();
			break;

		case "unmarried":
			WebElement unmarried = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Unmarried']")));
			unmarried.click();
			break;

		case "divorce":
			WebElement divorce = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Divorce']")));
			divorce.click();
			break;

		case "widow":
			WebElement widow = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Widow']")));
			widow.click();
			break;

		case "others":
			WebElement others = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Others']")));
			others.click();
			break;

		default:
			System.out.println("Invalid marital status specified: " + Patient_Marital_Status);
			break;
		}

		// *****************Field #18 Type of Visit***************************

		// 18. Type of Visit dropdown trigger is Mandatory Field Locate By XPath
		WebElement TyoeOfVisitDropdownTrigger = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-patient-registration/div/mat-card/form/div/div[18]/mat-form-field/div/div[1]/div[3]/mat-select/div/div[1]/span")));
		TyoeOfVisitDropdownTrigger.click();

		// Type of Visit selection based on Patient_Type_Of_Visit value
		switch (Patient_Type_Of_Visit.toLowerCase()) {
		case "clinical":
			WebElement clinical = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Clinical']")));
			clinical.click();
			break;

		case "educational":
			WebElement educational = wait.until(
					ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Educational']")));
			educational.click();
			break;

		case "immunization visit":
			WebElement immunizationVisit = wait.until(ExpectedConditions
					.elementToBeClickable(By.xpath("//span[normalize-space()='Immunization Visit']")));
			immunizationVisit.click();
			break;

		case "others":
			WebElement others = wait
					.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[normalize-space()='Others']")));
			others.click();
			break;

		default:
			System.out.println("Invalid type of visit specified: " + Patient_Type_Of_Visit);
			break;
		}

		// *******************Patient Registration Form Done*******************

		// Flow
		System.out.println("Step# 03: Registration Form Fill Successfully Done");

		// ******************Submit Patient Registration Form******************

		// Click on Register Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn-Submit olfcss']"))).click();

		// Flow
		System.out.println("Step# 04: New Patient [ " + Patient_First_Name + " " + Patient_Middle_Name + " "
				+ Patient_Last_Name + " ] Register Successfully Done");

		// ********************Book Appointment****************************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Click on Book Appointment Button Locate By XPath
//		driver.findElement(By.xpath("//button[@class='btn-Appointment olfcss']")).click();

		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn-Appointment olfcss']")))
				.click();

		// Locate Snack-Br (Toast Message) and Press Ok Button
		wait.until(ExpectedConditions
				.elementToBeClickable(By.xpath("//div[@aria-live='assertive']//div//simple-snack-bar//div//button")))
				.click();

		// Flow
		System.out.println("Step# 05: Book Appointment");

		// ********************Search Doctor********************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Specialities List dropdown trigger is Optional Field Locate By XPath
		WebElement SpecialitiesdownTrigger = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-search-doctor/div/mat-card/form/div[1]/div[1]/mat-form-field/div/div[1]/div[3]/mat-select/div")));
		SpecialitiesdownTrigger.click();

		// Specialities List dropdown options Family Medicine Locate By XPath
		WebElement FamilyMedicine = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[@class='mat-option-text']")));
		FamilyMedicine.click();

		// Search Doctor by Specific Name "Dr. Sabeen Shah"
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
				"/html/body/app-root/app-search-doctor/div/mat-card/form/div[1]/div[2]/mat-form-field/div/div[1]/div[3]/input")))
				.sendKeys("Dr. Sabeen Shah");

		// Click on Search Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn-Search mr-4']"))).click();

		// Flow
		System.out.println("Step# 06: Search Doctor by Specific Name");

		// *********************Select Doctor*******************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Click on Select Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath(".//button[@class='btn-Select select-css']")))
				.click();

		// Flow
		System.out.println("Step# 07: Select Doctor by Specific Name");

		// ********************Select Schedule*******************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Click on Select Schedule Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
				"/html/body/app-root/app-doctorschedule/div/mat-card/div/div[1]/mat-card/mat-card-actions/button")))
				.click();

		// Flow
		System.out.println("Step# 08: Select Schedule");

		// *********************Select Slot***********************

		// Pauses for 2 second
		Thread.sleep(2000);

		// Click on Select Slot Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(
				By.xpath("//button[@class='mat-focus-indicator btn-Book mt-1 mat-button mat-button-base']"))).click();

		// Flow
		System.out.println("Step# 09: Select Slot");

		// **************Appointment Confirmation*******************

		// 20 seconds = 20,000 milliseconds
		Thread.sleep(14000); // 20 seconds = 20,000 milliseconds

		// Click on CONFIRM APPOINTMENT WITH PAY Button Locate By XPath
		wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn-ConfirmApp left']"))).click();

		// Flow
		System.out.println("Step# 10: Confirm Appointment With Pay.");

		// ***********************Payment***************************

		// Pauses for 1 second
		Thread.sleep(1000);

		// Discount dropdown trigger is Mandatory Field Locate By XPath
		WebElement DiscountDropdownTrigger = wait.until(ExpectedConditions.elementToBeClickable(
				By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select")));
		DiscountDropdownTrigger.click();

		// Discount selection based on Patient_Discount value
		switch (Patient_Discount.toLowerCase()) {
		case "default":
			WebElement defaultOption = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[2]")));
			defaultOption.click();
			break;

		case "adults":
			WebElement adults = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[3]")));
			adults.click();
			break;

		case "zero":
			WebElement zero = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[4]")));
			zero.click();
			break;

		case "yph":
			WebElement yph = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[5]")));
			yph.click();
			break;

		case "peads":
			WebElement peads = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[6]")));
			peads.click();
			break;

		case "service charges":
			WebElement serviceCharges = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[7]")));
			serviceCharges.click();
			break;

		case "discounted fees":
			WebElement discountedFees = wait.until(ExpectedConditions.elementToBeClickable(
					By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/table/tr[8]/td/select/option[8]")));
			discountedFees.click();
			break;

		default:
			System.out.println("Invalid discount option specified: " + Patient_Discount);
			break;
		}

		// Click on PAY Button Locate By XPath
		driver.findElement(By.xpath("/html/body/app-root/app-paymentsummary/div/mat-card/mat-card-actions/button[1]"))
				.click();

		// Flow
		System.out.println("Step# 14: Payment Confirmed With Option [ " + Patient_Discount + " ]");

//						// *****************Print Invoice Thermal***************

//				// Click on PRINT INVOICE (Thermal) Button Locate By XPath
//				driver.findElement(By.xpath("/html/body/app-root/app-confirmpayment/div/mat-card/mat-card-actions/button[1]"))
//				.click();

//				// Flow
//				System.out.println("Step# 15: Confirm Appointment Print With Thermal");

		// Pauses for 2 second
//				Thread.sleep(2000);
		//
//				// Switch to Main Window "Todays Appointment"
//				driver.navigate().to("https://emrunitclerk.virtualdoc.akdndhrc.org/#/emrfrontend/emrhome");
		//
//				// Flow
//				System.out.println("Step# 16: Showing Patient Card In Main Screen");
//				System.out.println(" 👍 Happy Flow ദ്ദി˙ ᴗ ˙ )");

		// *****************Print Invoice (A5)***************

		// Click on PRINT INVOICE (A5) Button Locate By XPath
		driver.findElement(By.xpath("/html/body/app-root/app-confirmpayment/div/mat-card/mat-card-actions/button[2]"))
				.click();

		// Flow
		System.out.println("Step# 15: Confirm Appointment Print With (A5)");

		// Pauses for 2 second
		Thread.sleep(2000);

		// Switch to Main Window "Todays Appointment"
		driver.navigate().to("https://emrunitclerk.virtualdoc.akdndhrc.org/#/emrfrontend/emrhome");

		// Flow
		System.out.println("Step# 16: Showing Patient Card In Main Screen");
		System.out.println(" 👍 Happy Flow ദ്ദി˙ ᴗ ˙ )");

	}

}
